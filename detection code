import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score
sonar=pd.read_csv('/content/Copy of sonar data.csv',header=None)
sonar.head()
sonar.shape
sonar.describe()
sonar.value_counts(60)
sonar.groupby(60).mean()
X=sonar.drop(columns=60,axis=1)Y=sonar[60]
print(X)
print(Y)
X_train,X_test,Y_train,Y_test=train_test_split(X,Y,test_size=0.1,stratify=Y,random_state=2)
print(X.shape,X_train.shape,X_test.shape)
model=LogisticRegression()
model.fit(X_train,Y_train)
X_train_prediction = model.predict(X_train)
training_data_accuracy=accuracy_score(X_train_prediction, Y_train)
print('accuracy of the training data is: ',training_data_accuracy*100)
X_test_prediction = model.predict(X_test)
test_data_accuracy=accuracy_score(X_test_prediction, Y_test)
print('accuracy of the test data is: ',test_data_accuracy*100)
input=()
input_array=np.asarray(input)
input_reshaped=input_array.reshape(1,-1)
prediction=model.predict(input_reshaped)
if prediction[0]=='R':
  print('Object is a Rock.')
else:
  print('Object is a Mine.') 
